# /etc/nginx/sites-available/record_log

# HTTP 重定向到 HTTPS (只保留这一个 HTTP 服务器块)
server {
    listen 80;
    listen [::]:80;  # 添加 IPv6 支持
    server_name www.rlj.net.cn rlj.net.cn 43.142.171.111;
    return 301 https://www.rlj.net.cn$request_uri;
}

# HTTPS 主配置
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;  # 添加 IPv6 支持
    server_name www.rlj.net.cn rlj.net.cn;
    
    # ===== 修复点 1: 确保证书路径正确 =====
    ssl_certificate /etc/nginx/rlj.net.cn_bundle.crt;
    ssl_certificate_key /etc/nginx/rlj.net.cn.key;
    
    # SSL 优化配置
    ssl_session_cache shared:SSL:10m;  # 增加缓存大小
    ssl_session_timeout 1h;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp384r1;  # 添加 ECDH 曲线
    
    # ===== 修复点 2: 添加 OCSP Stapling 提升性能 =====
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # 项目根目录
    root /home/myblog/record_log;
    
    # 访问日志
    access_log /var/log/nginx/record_log_ssl_access.log;
    error_log /var/log/nginx/record_log_ssl_error.log;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 静态文件处理
    location /static {
        alias /home/myblog/record_log/static;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # 图片文件特殊处理
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # CSS和JS文件
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # 应用代理
    location / {
        proxy_pass http://127.0.0.1:5000;  # 确保 Gunicorn 在此端口运行
        
        # ===== 修复点 3: 添加 WebSocket 支持 =====
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 限制文件上传大小
    client_max_body_size 16M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # 隐藏Nginx版本
    server_tokens off;
    
    # ===== 修复点 4: 添加默认根位置处理 =====
    location = / {
        try_files $uri $uri/ =404;
    }
}

# ===== 修复点 5: 添加默认 HTTPS 服务器块处理无效请求 =====
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    ssl_certificate /etc/nginx/rlj.net.cn_bundle.crt;
    ssl_certificate_key /etc/nginx/rlj.net.cn.key;
    return 444;  # 关闭连接
}